{"version":3,"file":"static/js/314.bfd14967.chunk.js","mappings":"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","sources":["services/courseService.ts","services/studentService.ts","services/api.ts","components/StatsCard.tsx","components/LogoutButton.tsx","pages/Dashboard.tsx"],"sourcesContent":["import apiRequest from './api';\nimport { Course, CoursePayload } from '../types';\n\nconst API_BASE = 'https://681e251bc1c291fa66332e95.mockapi.io/api/lazarus';\n\nexport const fetchCourses = async (): Promise<Course[]> => {\n    return apiRequest<Course[]>('courses');\n};\n\nexport const fetchCourseById = async (id: string): Promise<Course> => {\n    return apiRequest<Course>(`courses/${id}`);\n};\n\nexport const createCourse = async (courseData: CoursePayload): Promise<Course> => {\n    return apiRequest<Course>('courses', 'POST', courseData);\n};\n\nexport const updateCourse = async (id: string, courseData: Partial<Course>): Promise<Course> => {\n    return apiRequest<Course>(`courses/${id}`, 'PUT', courseData);\n};\n\nexport const deleteCourse = async (id: string): Promise<void> => {\n    await apiRequest<void>(`courses/${id}`, 'DELETE');\n};","import apiRequest from './api';\nimport { Student } from '../types';\n\nexport const fetchStudents = async (): Promise<Student[]> => {\n    return apiRequest<Student[]>('students');\n};\n\nexport const fetchStudentById = async (id: string): Promise<Student> => {\n    return apiRequest<Student>(`students/${id}`);\n};","const API_BASE_URL = 'https://681e251bc1c291fa66332e95.mockapi.io/api/lazarus';\n\nconst handleResponse = async <T>(response: Response): Promise<T> => {\n    if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    return response.json();\n};\n\nconst apiRequest = async <T>(\n    endpoint: string,\n    method: string = 'GET',\n    data?: unknown\n): Promise<T> => {\n    const url = `${API_BASE_URL}/${endpoint}`;\n    const config: RequestInit = {\n        method,\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    };\n\n    if (data) {\n        config.body = JSON.stringify(data);\n    }\n\n    try {\n        const response = await fetch(url, config);\n        return handleResponse<T>(response);\n    } catch (error) {\n        console.error(`API request failed: ${error}`);\n        throw error;\n    }\n};\n\nexport default apiRequest;","import { Link } from 'react-router-dom';\n\ninterface StatsCardProps {\n    title: string;\n    count: number;\n    link: string;\n}\n\nconst StatsCard = ({ title, count, link }: StatsCardProps) => (\n    <Link to={link} className=\"stats-card\">\n        <div className=\"stats-card-inner\">\n            <h3>{title}</h3>\n            <div className=\"stats-content\">\n                <span className=\"count\">{count}</span>\n            </div>\n        </div>\n    </Link>\n);\n\nexport default StatsCard;","import { useNavigate } from 'react-router-dom';\n\nconst LogoutButton = () => {\n    const navigate = useNavigate();\n\n    const handleLogout = () => {\n        localStorage.removeItem('authenticated');\n        navigate('/login');\n    };\n\n    return (\n        <button\n            onClick={handleLogout}\n            className=\"logout-button\"\n        >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                <path d=\"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4M16 17l5-5-5-5M21 12H9\"/>\n            </svg>\n            <span>Выйти</span>\n        </button>\n    );\n};\n\nexport default LogoutButton;","import React, { useEffect, useState, useMemo } from 'react';\nimport { fetchCourses } from '../services/courseService';\nimport { fetchStudents } from '../services/studentService';\nimport Loader from '../components/Loader';\nimport StatsCard from '../components/StatsCard';\nimport LogoutButton from '../components/LogoutButton';\n\nconst Dashboard = () => {\n    const [coursesCount, setCoursesCount] = useState(0);\n    const [studentsCount, setStudentsCount] = useState(0);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const loadData = async () => {\n            try {\n                const [courses, students] = await Promise.all([\n                    fetchCourses(),\n                    fetchStudents()\n                ]);\n                setCoursesCount(courses.length);\n                setStudentsCount(students.length);\n            } catch (error) {\n                console.error('Ошибка загрузки данных:', error);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        loadData();\n    }, []);\n\n    const courses = useMemo(() => coursesCount, [coursesCount]);\n    const students = useMemo(() => studentsCount, [studentsCount]);\n\n    if (loading) return <Loader />;\n\n    return (\n        <div className=\"dashboard-container\">\n            <LogoutButton />\n            <h1>Административная панель Gwynbleidd</h1>\n            <div className=\"stats-grid\">\n                <StatsCard\n                    title=\"Курсов на платформе\"\n                    count={courses}\n                    link=\"/courses\"\n                />\n                <StatsCard\n                    title=\"Студентов обучается\"\n                    count={students}\n                    link=\"/students\"\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default React.memo(Dashboard);"],"names":["fetchCourses","async","apiRequest","fetchCourseById","concat","id","createCourse","courseData","updateCourse","deleteCourse","fetchStudents","fetchStudentById","endpoint","method","arguments","length","undefined","data","url","config","headers","body","JSON","stringify","response","ok","Error","status","json","handleResponse","fetch","error","console","_ref","title","count","link","_jsx","Link","to","className","children","_jsxs","LogoutButton","navigate","useNavigate","onClick","handleLogout","localStorage","removeItem","xmlns","width","height","viewBox","fill","stroke","strokeWidth","d","Dashboard","coursesCount","setCoursesCount","useState","studentsCount","setStudentsCount","loading","setLoading","useEffect","courses","students","Promise","all","loadData","useMemo","Loader","StatsCard","React"],"sourceRoot":""}
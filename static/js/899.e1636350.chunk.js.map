{"version":3,"file":"static/js/899.e1636350.chunk.js","mappings":"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","sources":["services/studentService.ts","services/api.ts","pages/StudentDetails.tsx","utils/helpers.ts"],"sourcesContent":["import apiRequest from './api';\nimport { Student } from '../types';\n\nexport const fetchStudents = async (): Promise<Student[]> => {\n    return apiRequest<Student[]>('students');\n};\n\nexport const fetchStudentById = async (id: string): Promise<Student> => {\n    return apiRequest<Student>(`students/${id}`);\n};","const API_BASE_URL = 'https://681e251bc1c291fa66332e95.mockapi.io/api/lazarus';\n\nconst handleResponse = async <T>(response: Response): Promise<T> => {\n    if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    return response.json();\n};\n\nconst apiRequest = async <T>(\n    endpoint: string,\n    method: string = 'GET',\n    data?: unknown\n): Promise<T> => {\n    const url = `${API_BASE_URL}/${endpoint}`;\n    const config: RequestInit = {\n        method,\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    };\n\n    if (data) {\n        config.body = JSON.stringify(data);\n    }\n\n    try {\n        const response = await fetch(url, config);\n        return handleResponse<T>(response);\n    } catch (error) {\n        console.error(`API request failed: ${error}`);\n        throw error;\n    }\n};\n\nexport default apiRequest;","import { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { fetchStudentById } from '../services/studentService';\nimport { Student } from '../types';\nimport Loader from '../components/Loader';\nimport { formatPrice } from '../utils/helpers';\nimport '../styles/studentDetails.css';\n\nconst StudentDetails = () => {\n    const { id } = useParams<{ id: string }>();\n    const [student, setStudent] = useState<Student | null>(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        const loadStudent = async () => {\n            try {\n                if (id) {\n                    const data = await fetchStudentById(id);\n                    setStudent(data);\n                }\n            } catch (error) {\n                setError('Не удалось загрузить данные студента');\n            } finally {\n                setLoading(false);\n            }\n        };\n        loadStudent();\n    }, [id]);\n\n    if (loading) return <Loader />;\n    if (error) return <div className=\"error-message\">{error}</div>;\n    if (!student) return <div className=\"error-message\">Студент не найден</div>;\n\n    return (\n        <div className=\"student-details-wrapper\">\n            <div className=\"student-card\">\n                <div className=\"student-header\">\n                    <h1>{student.fullName}</h1>\n                    <Link to=\"/students\" className=\"btn secondary\">\n                        <span>Назад к списку</span>\n                    </Link>\n                </div>\n\n                {student.photoUrl && (\n                    <div className=\"student-photo\">\n                        <img src={student.photoUrl} alt={student.fullName} />\n                    </div>\n                )}\n\n                <div className=\"student-section\">\n                    <h3>Контактная информация</h3>\n                    <ul>\n                        <li><strong>Email:</strong> {student.email}</li>\n                        <li><strong>Телефон:</strong> {student.phone}</li>\n                        <li><strong>Город:</strong> {student.city}</li>\n                        <li><strong>Возраст:</strong> {student.age}</li>\n                    </ul>\n                </div>\n\n                <div className=\"student-section\">\n                    <h3>Обучение</h3>\n                    <ul>\n                        <li><strong>Формат:</strong> {student.format}</li>\n                        <li><strong>Успеваемость:</strong> {student.performance}</li>\n                        <li><strong>Прогресс прохождения курса:</strong> {student.progress}%</li>\n                    </ul>\n                </div>\n\n                <div className=\"student-section\">\n                    <h3>Курс</h3>\n                    <ul>\n                        <li><strong>Название:</strong> {student.course.title}</li>\n                        <li><strong>Уровень:</strong> {student.course.level}</li>\n                        <li><strong>Стоимость:</strong> {formatPrice(student.course.price)}</li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default StudentDetails;\n","export const formatPrice = (price: number): string => {\n    return `${Math.round(price)} 000 ₽`;\n};\n\nexport const capitalize = (str: string): string => {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n};\n\nexport const handleApiError = (error: unknown): string => {\n    console.error(error);\n    return error instanceof Error\n        ? error.message\n        : 'Произошла неизвестная ошибка';\n};"],"names":["fetchStudents","async","apiRequest","fetchStudentById","concat","id","endpoint","method","arguments","length","undefined","data","url","config","headers","body","JSON","stringify","response","ok","Error","status","json","handleResponse","fetch","error","console","StudentDetails","useParams","student","setStudent","useState","loading","setLoading","setError","useEffect","loadStudent","_jsx","Loader","className","children","_jsxs","fullName","Link","to","photoUrl","src","alt","email","phone","city","age","format","performance","progress","course","title","level","formatPrice","price","Math","round","handleApiError","message"],"sourceRoot":""}
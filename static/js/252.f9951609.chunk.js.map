{"version":3,"file":"static/js/252.f9951609.chunk.js","mappings":"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","sources":["services/courseService.ts","pages/CourseDetails.tsx","services/api.ts","utils/helpers.ts"],"sourcesContent":["import apiRequest from './api';\nimport { Course, CoursePayload } from '../types';\n\nconst API_BASE = 'https://681e251bc1c291fa66332e95.mockapi.io/api/lazarus';\n\nexport const fetchCourses = async (): Promise<Course[]> => {\n    return apiRequest<Course[]>('courses');\n};\n\nexport const fetchCourseById = async (id: string): Promise<Course> => {\n    return apiRequest<Course>(`courses/${id}`);\n};\n\nexport const createCourse = async (courseData: CoursePayload): Promise<Course> => {\n    return apiRequest<Course>('courses', 'POST', courseData);\n};\n\nexport const updateCourse = async (id: string, courseData: Partial<Course>): Promise<Course> => {\n    return apiRequest<Course>(`courses/${id}`, 'PUT', courseData);\n};\n\nexport const deleteCourse = async (id: string): Promise<void> => {\n    await apiRequest<void>(`courses/${id}`, 'DELETE');\n};","import { useLocation, useParams, Link } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchCourseById } from '../services/courseService';\nimport { Course } from '../types';\nimport Loader from '../components/Loader';\nimport { formatPrice } from '../utils/helpers';\n\nconst CourseDetails = () => {\n    const { id } = useParams();\n    const [course, setCourse] = useState<Course | null>(null);\n    const [loading, setLoading] = useState(true);\n\n    const location = useLocation();\n    const from = location.state?.from || '/courses';\n\n    useEffect(() => {\n        const loadData = async () => {\n            try {\n                if (id) {\n                    const data = await fetchCourseById(id);\n                    setCourse(data);\n                }\n            } catch (error) {\n                console.error('Ошибка загрузки данных курса:', error);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        loadData();\n    }, [id]);\n\n    if (loading) return <Loader />;\n    if (!course) return <div className=\"error-message\">Курс был удален. Обучение остановлено.</div>;\n\n    return (\n        <div className=\"course-details-wrapper\">\n            <div className=\"course-card\">\n                <div className=\"course-header\">\n                    <h1>{course.title}</h1>\n                    <div className=\"course-buttons mobile-priority\">\n                        <Link to={`/courses/${course.id}/edit`} className=\"btn primary\">\n                            ✎ Редактировать\n                        </Link>\n                        <Link to={from} className=\"btn secondary\">\n                            ← Назад\n                        </Link>\n                    </div>\n                </div>\n\n\n\n                <div className=\"course-section\">\n                <h3>Основная информация</h3>\n                <ul className=\"course-info-list\">\n                    <li><strong>Уровень:</strong> {course.level}</li>\n                    <li><strong>Стоимость:</strong> {formatPrice(course.price)}</li>\n                    <li><strong>Продолжительность:</strong> {course.duration} ч</li>\n                    <li><strong>Рейтинг:</strong> {course.rating} ★</li>\n                </ul>\n            </div>\n\n            <div className=\"course-section\">\n                <h3>Описание</h3>\n                <p>{course.full_description}</p>\n            </div>\n\n            <div className=\"course-section\">\n                <h3>Для кого курс</h3>\n                <p>{course.targetAudience}</p>\n            </div>\n\n            <div className=\"course-section\">\n                <h3>Начальные требования</h3>\n                <p>{course.prerequisites}</p>\n            </div>\n\n            <div className=\"course-section\">\n                <h3>Преподаватель</h3>\n                <p>{course.instructor}</p>\n            </div>\n\n            <div className=\"course-section\">\n                <h3>Материалы курса</h3>\n                <a href={course.materialsUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                    Перейти к материалам\n                </a>\n            </div>\n\n        </div>\n        </div>\n    );\n};\n\nexport default CourseDetails;\n","const API_BASE_URL = 'https://681e251bc1c291fa66332e95.mockapi.io/api/lazarus';\n\nconst handleResponse = async <T>(response: Response): Promise<T> => {\n    if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    return response.json();\n};\n\nconst apiRequest = async <T>(\n    endpoint: string,\n    method: string = 'GET',\n    data?: unknown\n): Promise<T> => {\n    const url = `${API_BASE_URL}/${endpoint}`;\n    const config: RequestInit = {\n        method,\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    };\n\n    if (data) {\n        config.body = JSON.stringify(data);\n    }\n\n    try {\n        const response = await fetch(url, config);\n        return handleResponse<T>(response);\n    } catch (error) {\n        console.error(`API request failed: ${error}`);\n        throw error;\n    }\n};\n\nexport default apiRequest;","export const formatPrice = (price: number): string => {\n    return `${Math.round(price)} 000 ₽`;\n};\n\nexport const capitalize = (str: string): string => {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n};\n\nexport const handleApiError = (error: unknown): string => {\n    console.error(error);\n    return error instanceof Error\n        ? error.message\n        : 'Произошла неизвестная ошибка';\n};"],"names":["fetchCourses","async","apiRequest","fetchCourseById","concat","id","createCourse","courseData","updateCourse","deleteCourse","CourseDetails","_location$state","useParams","course","setCourse","useState","loading","setLoading","from","useLocation","state","useEffect","data","error","console","loadData","_jsx","Loader","className","children","_jsxs","title","Link","to","level","formatPrice","price","duration","rating","full_description","targetAudience","prerequisites","instructor","href","materialsUrl","target","rel","endpoint","method","arguments","length","undefined","url","config","headers","body","JSON","stringify","response","ok","Error","status","json","handleResponse","fetch","Math","round","handleApiError","message"],"sourceRoot":""}